version: "3"


services:

  #database:
  #  image: postgres
  #  env_file:
  #    - .env
  #  volumes:
  #    - postgres_data:/var/lib/postgresql/data/
  #  networks:
  #    - ft_transcendence
  #  ports:
  #    - "5432:5432"
  #  build:
  #    context: ./postgresql
  #    dockerfile: Dockerfile
  #  restart: unless-stopped
  #  #healthcheck:
  #  #  test: mysqladmin ping --host=localhost -p${SQL_ROOT_PASSWORD}
  #  #  interval: 5s
  #  #  timeout: 1s
  #  #  retries: 20
  #  #  start_period: 5s

  #frontend:
  #  build: ./frontend
  #  restart: always
  #  ports:
  #    - "4000:4000"
  #  volumes:
  #    - ./frontend:/usr/src/app
  #    #- ./cert:/cert
  #  networks:
  #    - ft_transcendence
  #  depends_on:
  #    - backend
      
  backend:
    build: ./backend
    restart: always
    ports:
      - "8080:8080"
    env_file:
      - .env
    volumes:
      - ./backend:/app
      #- ./cert:/cert
    #depends_on:
    #  - database
    networks:
      - ft_transcendence

  #database:
  #  image: postgres
  #  env_file:
  #    - .env
  #  volumes:
  #    - postgres_data:/var/lib/postgresql/data/
  #  networks:
  #    - ft_transcendence
  #  build:
  #    context: ./postgresql
  #    dockerfile: Dockerfile
  #  restart: unless-stopped
  #  #healthcheck:
  #  #  test: mysqladmin ping --host=localhost -p${SQL_ROOT_PASSWORD}
  #  #  interval: 5s
  #  #  timeout: 1s
  #  #  retries: 20
  #  #  start_period: 5s

networks:
  ft_transcendence:
    name: ft_transcendence
    #driver: bridge

volumes:
  postgres_data:

#volumes:
#    postgres_data:/var/lib/postgresql/data/
#    driver: local
#    device: '/mnt/nfs/homes/blefebvr/Documents/Barbara/TC/Transcendence/ft_transcendence_v1/postgresql'

#version: "3"

#services:
#  frontend:
#    build: ./frontend
#    restart: always
#    ports:
#      - "4000:4000"
#    volumes:
#      - ./frontend:/usr/src/app
#      - ./cert:/cert
#    depends_on:
#      - backend
#  backend:
#    build: ./backend
#    restart: always
#    ports:
#      - "8080:8080"
#    env_file:
#      - ./.env
#    volumes:
#      - ./backend:/app
#      - ./cert:/cert
#    depends_on:
#      - database
#    networks:
#      - ft_transcendence
#  database:
#    image: postgres
#    env_file:
#      - ./.env
#    volumes:
#      - postgres_data:/var/lib/postgresql/data/
#    networks:
#      - ft_transcendence

#networks:
#  ft_transcendence:
#    driver: bridge

#volumes:
#  postgres_data:
